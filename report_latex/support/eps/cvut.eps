%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 45 748 138 818 
%%Creator: CorelDRAW 7
%%Title: 
%%CreationDate: Tue May 20 23:11:04 1997
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness true def
/AutoSteps 0 def
/CMYKMarks false def
/UseLevel2 false def
%Color profile: _DEFAULT.CCM
%%BeginResource: procset wCorel7Dict 7.0 0
/wCorel7Dict 300 dict def wCorel7Dict begin
% Copyright (c)1992-96 Corel Corporation
% All rights reserved.     v7.0 r1.0
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/setscreen{pop pop pop}bd/@ss{2 index
0 eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SepMode_5 where{pop}{/SepMode_5 0 def}ifelse/CurrentInkName_5 where{pop}
{/CurrentInkName_5(Composite)def}ifelse/$ink_5 where{pop}{/$ink_5 -1 def}
ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0 def/$t 1 def/$n _ def/$o 0 def/$fil 0
def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def/$T 1 def/$N _ def/$O 0 def/$PF false
def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0 def/s1t 0 def/s1n _ def/$bkg false def
/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op false def matrix currentmatrix/$ctm xd
/$ptm matrix def/$ttm matrix def/$stm matrix def/$ffpnt true def
/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent 16#8/ring
16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle
16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def
/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict/Corel30Dict get
exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known{end}if}bd AutoFlatness
{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/SetCmyk_5/setcmykcolor ld}{/SetCmyk_5{
cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk/currentcmykcolor
ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{
/$op xd}bd}ifelse/currentoverprint where{pop}{/currentoverprint{$op}bd}ifelse
/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/@trp{exch pop 5 1 roll @tc_5}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0
4 $ink_5 sub index exch pop 5 1 roll pop pop pop pop SepsColor true eq{$ink_5 3
gt{1 sub neg SetGry}{0 0 0 4 $ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}
ifelse}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array
astore}bd}ifelse/setcustomcolor where{pop}{/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop @tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}
ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type
/booleantype eq{setoverprint}{1 eq setoverprint}ifelse dup _ eq{pop
setprocesscolor_5 pop}{findcmykcustomcolor exch setcustomcolor}ifelse SepMode_5
0 eq{true}{GetGry 1 eq currentoverprint and not}ifelse}bd/colorimage where{pop
/ColorImage{colorimage}def}{/ColorImage{/ncolors xd pop/dataaq xd{dataaq
ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1 index
get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div rgb2g
255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}bd
}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5/$ffpnt xd}bd
/currentcmykcolor{0 0 0 0}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip Bburx Bbury $pm itransform/$tury xd/$turx
xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei
$tury $tlly sub def @gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k
$n $o @scc_5{SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1
false[8 0 0 1 0 0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt
$hei 0 gt and{$pn cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub
/$pwid xd $wid $pwid div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add
/$tly xd $psx 0 eq{@tv}{@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv
SepMode_5 0 eq $Psc 0 ne or $ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o
@scc_5 pop $ctm setmatrix 72 1000 div dup matrix scale dup concat dup Bburx
exch Bbury exch itransform ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch
Bblly exch itransform floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn
load exec}{1 SetGry wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf
$sca $scp @ss}if $fil 1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n
$o @scc_5{wfill}{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if
setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA
$SCP @ss}if $T $C $M $Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke
setmatrix}{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs
F @gr S}bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub scale $wid
$hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/@cc load false $ncl
ColorImage $SDF{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/COMP 0 def L2?{
/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx $ncl 1
eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace
$llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def
/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1 eq
{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq
{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@B{@gs S @gr F}bd/@b{@cp @B
}bd/@sep{CurrentInkName_5(Composite)eq{/$ink_5 -1 def}{CurrentInkName_5(Cyan)
eq{/$ink_5 0 def}{CurrentInkName_5(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5
(Yellow)eq{/$ink_5 2 def}{CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4
def}ifelse}ifelse}ifelse}ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l
72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx
currenttransfer/exec cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel
deflevel 1 add def}bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0
gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}
bd/@daq{dup type/arraytype eq{{}forall}if}bd/@BMP{/@cc xd 12 index 1 gt
UseLevel2 true eq and{7 -2 roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}
{7 -2 roll pop pop @I}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel7Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
47.82869 750.52403 136.82183 817.36243 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.78236 0.78236 0.00000 @w
/$fm 0 def
113.20554 814.48753 m
113.26847 814.03172 113.37364 812.51802 112.97991 811.75493 c
112.58617 810.99184 111.78085 810.71320 110.67987 810.05272 C
113.44422 805.61452 109.99049 804.70120 105.03014 803.60759 c
100.06980 802.51398 96.45846 802.15512 93.68050 799.32954 c
90.90255 796.50397 91.22740 796.23099 90.72992 793.25518 C
90.63808 788.81187 92.09367 784.64636 96.68013 783.25512 c
98.26724 782.77380 99.67323 782.20176 101.20762 781.80888 C
105.16791 780.87628 107.64113 780.08882 109.18006 777.15496 c
110.71899 774.22110 110.16935 774.93288 111.25134 772.20142 c
112.33332 769.46995 113.99301 766.06157 116.67770 763.75956 C
121.00564 763.36668 118.38983 764.44101 124.38000 763.65723 C
124.88003 762.75524 L
126.40139 756.15732 120.08863 756.98277 116.82992 759.15524 C
115.44973 760.20917 113.14063 762.29773 111.22866 761.20639 C
109.10324 759.70063 108.52781 758.31591 107.74318 755.65247 C
108.81099 756.56835 109.24498 756.55786 109.77619 756.74268 C
111.26891 772.05515 m
107.79392 772.19348 102.41490 774.20778 99.39487 773.64850 c
98.45036 773.47361 98.19950 772.84573 97.88003 772.45512 C
97.53874 768.91493 101.80290 769.97509 103.11874 769.95496 C
102.11443 767.90806 101.77824 767.86866 99.87987 766.55395 C
99.52356 761.56243 100.55679 753.68098 94.67773 752.21121 C
94.95326 753.00605 94.98472 753.55739 94.47987 754.25499 C
92.15433 755.18561 90.76280 753.05083 88.30517 752.45499 C
86.33169 752.92186 85.80387 753.53131 85.32992 753.75524 C
82.69200 755.92715 82.35524 758.33405 78.15969 757.55764 C
78.69033 759.06765 79.95175 761.01024 80.03934 761.09528 c
82.81616 763.79981 83.16028 762.98967 86.07997 759.45515 C
94.92633 784.04769 m
93.97276 783.20211 92.48258 782.16151 91.43121 781.65751 C
90.43795 785.44431 85.85631 783.81468 83.33008 781.95515 c
81.94564 780.93581 80.97392 777.82677 79.99228 777.60624 c
79.10391 777.40639 L
79.82220 779.99584 77.83200 780.08542 75.38003 779.87764 C
73.40570 780.54945 71.11332 782.22359 70.57984 784.35496 C
69.74022 786.14901 69.24671 787.25282 67.63606 785.81509 C
68.10973 788.01789 69.24387 789.78529 71.52123 789.15373 c
72.58195 788.85978 72.82375 787.55131 73.32860 786.60397 C
105.30850 803.70510 m
104.47540 803.90721 103.10627 804.18643 102.27260 804.26239 c
101.43893 804.33836 100.59307 804.15921 99.77754 804.10762 C
99.33194 806.92753 L
101.44857 806.28293 103.39654 806.13184 104.33083 807.54803 c
104.86828 808.36271 104.68970 809.51698 104.26904 810.19843 c
103.30639 811.75748 99.91757 811.65742 98.69896 810.14372 C
98.17994 814.00507 L
103.27011 814.28315 L
107.71880 814.40249 L
109.62964 814.39909 111.58894 814.49320 113.93830 814.44132 C
122.32346 812.34765 122.97260 800.06939 118.37991 794.30287 c
116.90957 792.45666 115.92340 790.95912 113.67609 789.34876 c
109.95335 786.68050 104.75320 786.82706 104.23247 781.21757 C
114.16961 789.64214 m
113.02072 787.28145 113.11965 782.77238 117.77981 781.45512 C
121.50879 781.21332 124.03757 782.48126 127.52192 783.66076 C
126.26702 783.58819 121.64031 784.22400 120.52998 787.85518 c
118.69767 793.84620 122.59871 796.90167 127.30422 801.25880 C
128.55798 802.20841 L
132.36293 804.79871 134.84211 808.70230 132.12964 812.30627 C
134.27802 812.15631 135.08164 811.51597 136.12876 810.10120 C
136.51427 809.53795 136.78498 808.80520 135.72992 808.15068 C
134.82283 805.48781 130.72762 801.65169 129.36983 800.67883 C
126.83367 798.54321 125.06627 797.36145 123.38107 795.15496 C
119.43128 789.59735 122.24041 785.25411 128.97865 785.09027 c
133.29213 784.98567 136.46438 788.17124 134.62980 792.75515 C
133.57134 795.76526 131.01931 798.00945 128.99112 800.33669 C
128.72863 802.40145 m
125.60542 806.14148 125.31628 807.97436 126.62362 812.23002 C
124.21843 811.92784 123.40970 811.80170 122.52132 809.75509 c
122.17124 808.94835 122.81272 807.74476 123.76261 807.41877 C
124.35250 805.80983 126.68910 802.56047 127.52107 801.50258 C
73.98000 811.75493 m
73.74047 812.54976 73.80794 813.22044 73.11515 813.55493 c
71.09830 814.52863 68.08450 812.26913 66.73124 810.90510 C
67.79480 811.12054 67.98047 810.75090 68.31241 810.04025 C
73.17609 807.95509 m
72.85380 812.57102 71.32791 812.97014 68.41304 809.99320 c
67.30498 808.86161 67.03654 808.25102 67.00620 807.37994 C
71.20828 809.61279 69.68863 803.27707 71.36617 800.21395 C
71.00334 801.49805 71.61732 799.75956 71.70435 799.53250 C
73.88249 799.27228 74.90551 798.17131 74.27735 796.30498 c
74.09906 795.77518 73.39181 795.56513 72.60746 795.99997 C
73.03748 795.32561 73.14123 794.83805 74.58009 794.85506 c
78.77735 794.90438 85.07395 796.67291 86.57631 791.30891 C
107.42372 814.40249 m
107.22869 813.82309 l
107.18759 813.70035 103.71231 810.92041 103.61055 812.11578 c
103.51786 813.20598 103.58532 813.57109 103.54819 814.27436 C
103.10428 814.25622 m
102.55436 817.35619 L
104.07742 817.36243 L
104.51169 816.94318 104.72910 815.93405 105.76998 815.98309 c
106.86359 816.03468 107.05635 816.91909 107.73609 817.35080 C
109.28239 817.35619 L
110.36381 816.59792 110.28529 815.95162 111.21477 815.96750 c
112.30724 815.98649 112.30214 816.84510 112.95553 817.32076 C
114.62882 817.34145 L
114.25550 814.37187 L
89.93225 809.96485 m
90.04337 808.57587 89.89654 808.10022 90.78265 807.71386 c
91.28324 807.49531 94.34920 807.92589 97.05997 808.36809 c
99.88356 808.82872 102.30321 808.97386 104.59219 808.60507 C
70.11865 805.44501 m
68.39631 804.24935 67.35543 804.08920 65.95483 804.35509 c
60.06756 805.47307 60.85559 813.99288 66.72983 813.40498 C
67.60800 813.29159 67.98529 813.02570 68.61260 812.47011 C
120.56769 807.75638 m
120.23433 797.15169 113.28633 793.67102 104.98649 790.15068 c
102.33865 789.02787 101.17956 784.16050 104.02384 781.31622 C
70.47383 802.79518 m
69.55313 802.08879 67.89146 801.48954 65.80488 801.80504 c
62.07902 802.36885 59.68006 804.77433 59.68006 809.25506 C
59.96835 814.17118 63.82233 817.06961 68.58000 815.60494 C
69.67247 814.90762 L
68.55619 790.83383 m
66.82677 792.08561 67.29137 791.63291 67.51162 791.76302 c
77.15991 797.46746 72.66614 786.92542 76.48016 784.85499 C
79.17704 784.85499 81.00340 787.24120 82.98000 788.80507 C
85.67858 790.75928 87.62400 791.85090 90.67238 793.19764 C
72.92013 793.56019 m
71.92375 799.50756 L
73.02983 790.15521 m
72.73729 792.70328 69.63335 791.62923 68.78693 790.97499 c
68.02044 790.38255 67.44898 789.69260 66.78000 788.90513 C
67.11420 788.65257 68.13099 789.71641 68.70869 788.48901 C
67.68992 791.87386 m
66.02428 801.75487 L
100.71836 782.05408 m
97.24847 780.98598 93.09260 779.99102 90.18000 777.85512 C
87.93213 774.48387 91.86066 769.06488 92.77994 765.75515 C
93.01720 762.57411 94.02378 759.19663 90.10517 758.60504 C
87.10866 759.39165 87.42926 762.56135 85.72734 764.70520 c
81.99978 769.40135 77.10661 763.89024 75.79417 762.77509 C
76.18110 762.86750 77.50630 763.14359 77.79628 763.19433 c
78.08570 763.24507 78.60983 763.17052 78.95424 763.14813 C
77.78409 763.07499 m
78.01569 762.13361 L
101.57357 781.75899 m
99.51704 783.80532 98.21310 785.27735 98.58529 789.35726 C
99.71943 792.14230 100.02076 792.73417 103.55272 794.35672 c
107.08469 795.97928 117.00822 799.17477 118.17978 805.65506 C
118.40712 807.44202 119.17644 809.60513 117.55332 812.51943 C
93.72756 799.50756 m
90.40592 800.40189 86.76198 800.62356 83.33008 800.75509 C
81.27524 801.04110 76.65449 801.58365 75.97984 804.05518 C
75.59858 807.38107 75.92825 810.12217 75.78000 813.55493 c
75.66945 816.12113 70.19546 816.14438 68.43005 813.80494 C
69.14466 813.37408 69.06813 813.60879 69.36917 812.94208 C
110.87603 773.55496 m
109.92614 773.55496 107.28850 773.40104 107.17994 774.50513 c
106.79726 778.39115 106.06961 778.28910 103.89487 779.86261 C
104.18372 781.07131 L
77.58000 764.46539 m
75.13342 779.85213 L
84.77235 763.76013 m
83.31732 765.76507 80.96854 765.20750 79.49764 763.51776 c
79.39843 763.40353 78.91965 762.92731 78.18803 762.19654 c
77.51537 761.52501 77.77361 761.88926 76.94079 760.60431 C
77.88926 760.70863 78.58828 761.08110 79.81597 760.73074 C
115.92255 758.31250 m
114.68920 758.66230 114.28413 759.30576 113.05134 759.65499 c
111.52772 760.08699 110.22094 758.05313 109.77619 756.32457 c
109.57238 755.53285 109.53354 754.45143 109.46069 753.63704 C
110.79978 754.47269 111.31002 754.28447 111.91748 754.04778 C
78.25124 760.76334 m
79.68586 751.84299 L
78.48822 753.83376 79.29411 753.47745 76.57994 756.05499 C
72.36907 779.61175 L
69.34989 781.83071 L
68.68545 786.37011 L
118.58003 756.25512 m
117.58054 756.41046 116.87301 756.71235 115.72753 757.16022 c
111.62976 758.76208 112.05751 754.13679 111.95887 751.54989 C
112.58504 752.97458 116.02233 753.15600 118.27729 751.05638 C
119.44176 750.64450 120.31342 750.81798 121.38009 750.60142 C
122.08025 750.66803 123.10129 750.52403 123.72378 750.85002 c
124.93559 751.48441 127.28806 755.03367 128.72863 751.75512 c
128.90466 751.35458 128.54665 750.79077 128.68016 750.68249 C
133.57899 751.00762 131.18258 766.99814 131.18003 767.05512 C
133.43839 769.26756 132.97011 768.92173 133.42337 771.25294 C
129.16063 770.95956 124.77005 770.84674 120.67994 771.75496 C
118.29912 773.78995 120.39732 778.56718 118.28976 779.64633 C
119.20309 779.73279 120.11641 779.67269 121.03002 779.90513 C
124.63909 780.70167 136.82183 783.52016 136.72176 789.86324 C
136.63361 793.58400 133.93417 797.32573 130.14369 801.19389 C
47.82869 751.85291 m
52.45597 768.58469 57.20315 785.27452 61.88457 801.97767 C
64.83005 800.54844 L
65.77994 796.00507 L
61.98009 781.95515 L
57.97984 779.45499 L
55.81616 771.65546 53.65247 763.85565 51.48879 756.05584 C
48.11726 752.69906 48.85313 753.44967 47.82869 751.85291 C
@c
98.41805 782.66608 m
98.33981 782.71115 96.16479 783.82035 95.33140 786.79389 C
93.86986 791.08356 94.40135 795.34290 100.83005 798.15515 C
106.31877 800.55524 113.32715 800.29729 115.77997 806.95502 C
116.47474 809.15669 115.97613 812.87858 114.08740 814.34636 C
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel7Dict
%%EOF
